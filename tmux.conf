setw -g mode-keys vi  # Move through buffers with vi bindings.
set -g prefix C-s  # Use C-s as prefix.
set -sg escape-time 0  # No delays with escape key.
set-option -g renumber-windows on  # Renumber windows after one closes.

# Enable true color support.
set-option -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"

# Keybindings.
bind C-r source-file ~/.tmux.conf \; display "Reloaded!"
bind C-c copy-mode

bind -n C-t new-window
bind -n C-w kill-window
bind C-w attach -c "#{pane_current_path}"

bind -n M-a previous-window
bind -n M-f next-window

bind -n M-L split-window -h
bind -n M-J split-window -v

bind -n S-Left swap-window -t -1
bind -n S-Right swap-window -t +1

# To disable default pane movement.
unbind -n C-h
unbind -n C-j
unbind -n C-k
bind -n C-l send-keys 'C-l'

unbind -T copy-mode-vi C-h
unbind -T copy-mode-vi C-j
unbind -T copy-mode-vi C-k
unbind -T copy-mode-vi C-l

bind -T copy-mode-vi Escape if-shell -F "#{selection_present}" \
  "send-keys -X clear-selection" "send-keys -X cancel"
bind -T copy-mode-vi v send-keys -X begin-selection
# bind -T copy-mode-vi y send-keys -X copy-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "cat | clip.exe"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n M-h if-shell "$is_vim" "send-keys M-h" "select-pane -L"
bind -T copy-mode-vi M-h select-pane -L
bind -n M-j if-shell "$is_vim" "send-keys M-j" "select-pane -D"
bind -T copy-mode-vi M-j select-pane -D
bind -n M-k if-shell "$is_vim" "send-keys M-k" "select-pane -U"
bind -T copy-mode-vi M-k select-pane -U
bind -n M-l if-shell "$is_vim" "send-keys M-l" "select-pane -R"
bind -T copy-mode-vi M-l select-pane -R
